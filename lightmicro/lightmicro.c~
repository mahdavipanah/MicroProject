#include <mega8.h>
#include <interrupt.h>


// LED patterns
eeprom char pattern[8][2];
// LED active pattern number
eeprom char pattern_no = 0;


// Stores if next USART data is a pattern byte
char usart_mode = 0;
// Next USART pattern byte number
char usart_byte_no = 0;
// Number of pattern to edit
char edit_pattern_no = 0;


void update_led_ports(void);


void main(void)
{
	/*
		Gives pattern_no initial value
	*/
    if (pattern_no == 0xFF) {
        pattern_no = 0;
    }

    update_led_ports();

    /*
        LED output ports directions
    */
    DDRB = 0xFF;
    DDRC = 0xFF;
    DDRD = 0b00001110;

    // Block number input internal pull-up
    PORTD |= 0xF0;

    /*
        USART initialization
    */
    UCSRB = (1<<RXEN) | (1<<RXCIE) | (1<<TXEN);
    UCSRC = (1<<UCSZ1) | (1<<UCSZ0) | (1<<URSEL);
    UBRRL = 0x33;

    sei();

	/*
		Program's main loop
	*/
    while (1);
}


/*
    Updates LED ports based on active pattern number
*/
void update_led_ports(void)
{
    char pattern_byte1 = pattern[pattern_no][1];

    PORTB = pattern[pattern_no][0];

    PORTC = pattern_byte1;

    pattern_byte1 >>= 6;
    PORTD.2 = pattern_byte1 & 0x01;

    pattern_byte1 >>= 1;
    PORTD.3 = pattern_byte1;
}


/*
    USART recieve complete interrupt service routine
*/
interrupt [USART_RXC]
void usart_rxc_isr(void)
{
    // Read recieved data
    char udr = UDR;

    // If USART data is a command
    if (usart_mode == 0) {
        // Select command
        if ((udr & (1<<7)) != 0) {
            if ((udr & (1<<3)) == 0) {
                pattern_no = (udr>>4) & (0x07);
                update_led_ports();
            }
        }
        else {
            if ((udr & (1<<5)) == 0) {
                // Write command
                if ((udr & (1<<4)) == 0) {
                    // If command is for this block
                    if ((PIND>>4) == (udr & 0x0F)){
                        usart_byte_no = udr>>6;
                        usart_mode = 1;
                    }
                    else {
                        usart_mode = 2;
                    }
                }
                // Change pattern number to edit command
                else {
                    edit_pattern_no = udr & (0x07);
                }
            }
            else {
                // If  centeralmicro tries to test the lightmicro
                if ((udr & (1<<4)) == 0) {
                    // If command is for this block
                    if ((PIND>>4) == (udr & 0x0F)){
                        while (UCSRA.UDRE == 0);
                        // Send block number to centralmicro
                        UDR = ((PIND>>2) & 0x3C) + 0x02;
                    }
                }
                else {
                    // centeralmicro is sendig a temperature range
                    // for tempmicro, so ignore next USART byte
                    usart_mode = 2;
                }
            }
        }
    }
    // If USART data is a pattern byte
    else {
        if (usart_mode == 1) {
            pattern[edit_pattern_no][usart_byte_no] = udr;
            /*
                Update LED ports on second byte edition
                and if current active pattern is edited
                pattern.
            */
            if (usart_byte_no == 1 &&
                pattern_no == edit_pattern_no) {
                update_led_ports();
            }
        }
        usart_mode = 0;
    }
}
